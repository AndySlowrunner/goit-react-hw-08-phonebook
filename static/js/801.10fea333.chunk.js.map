{"version":3,"file":"static/js/801.10fea333.chunk.js","mappings":"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","sources":["components/ContactFilter/StyledFilter.jsx","redux/selectors.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactForm/StyledForm.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/StyledList.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledFilter = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 164px;\n    gap: 4px;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter], (items, filters) => {\n        return items.filter(item => item.name.toLowerCase()\n            .includes(filters.toLowerCase()))\n    });","import { useDispatch, useSelector } from \"react-redux\";\nimport { StyledFilter } from \"./StyledFilter\";\nimport { setFilter } from \"redux/filterSlice\";\nimport { selectFilter, selectVisibleContacts } from \"redux/selectors\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const value = useSelector(selectFilter);\n    const checkList = useSelector(selectVisibleContacts);\n    console.log(checkList.length);\n\n    const handleChange = (e) => {\n        dispatch(setFilter(e.target.value));\n    }\n\n    return (\n        <>\n            {checkList.length > 0 ? (\n                <StyledFilter>\n                    <label>Find contacts by name</label>\n                    <input\n                        type=\"text\"\n                        value={value}\n                        onChange={handleChange}\n                    />\n                </StyledFilter>) : (<p>Please, add your contacts!</p>)}\n        </>\n    );\n}","import styled from 'styled-components';\nimport { Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    width: 164px;\n    padding: 8px 124px 8px 8px;\n\n    display: flex;\n    flex-direction: column;\n    border: 2px solid black;\n    gap: 8px;\n`;\n\nexport const ButtomStyle = styled.button`\n    width: 90px;\n`;\n\nexport const StyledDiv = styled.div`\n    margin-left: 10px;\n`;","import { Formik, Field } from \"formik\";\nimport { StyledForm, ButtomStyle } from \"./StyledForm\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\nimport { addContact } from \"redux/operations\";\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    phone: yup.string().required(),\n});\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n        const items = useSelector(selectContacts);\n\n    const handleSubmit = (values, {resetForm}) => {      \n        const isExist = items.some(item => item.name.toLowerCase() === values.name.toLowerCase());\n        \n        if (isExist) {\n            alert(`${values.name} is already in contacts.`);\n            return\n        }\n        \n        dispatch(addContact({ ...values }));\n        resetForm();\n    };\n    \n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                phone: '',\n            }}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n        >\n            <StyledForm>\n                <label>Name</label>\n                <Field\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                <label>Number</label>\n                <Field\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n                <ButtomStyle type=\"submit\">Add contact</ButtomStyle>\n            </StyledForm>\n        </Formik>\n    );\n};","import styled from \"styled-components\";\n\nexport const StyledList = styled.li`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    height: 24px;\n`;\nexport const StyledUl = styled.ul`\n    padding: 0;\n`;","import { useDispatch, useSelector } from \"react-redux\"\nimport { StyledList, StyledUl } from \"./StyledList\"\nimport { selectVisibleContacts } from \"redux/selectors\"\nimport { deleteContact } from \"redux/operations\";\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n\n    return (\n        <StyledUl>\n            {contacts.map(({name, phone, id}) =>\n                <StyledList key={id}>\n                    <p>{name}:{' ' + phone}</p>\n                    <button onClick={() => {\n                        dispatch(deleteContact(id));\n                    }}>Delete</button>\n                </StyledList>\n            )}\n        </StyledUl>\n    )\n}","import { Filter } from \"components/ContactFilter/ContactFilter\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { StyledDiv } from \"components/ContactForm/StyledForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectError, selectIsLoading } from \"redux/selectors\";\n\nexport const Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n    \n    return (\n        <StyledDiv>\n            <h1>Phonebook</h1>\n            <ContactForm/>\n            <h2>Contacts</h2>\n            <Filter/>\n            {isLoading && !error && <b>Request in progress...</b>}\n            <ContactList/>\n        </StyledDiv>\n    );\n };"],"names":["StyledFilter","styled","_templateObject","_taggedTemplateLiteral","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","item","name","toLowerCase","includes","Filter","dispatch","useDispatch","value","useSelector","checkList","console","log","length","_jsx","_Fragment","children","_jsxs","type","onChange","e","setFilter","target","StyledForm","Form","ButtomStyle","_templateObject2","StyledDiv","_templateObject3","schema","yup","shape","required","phone","ContactForm","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","some","alert","concat","addContact","validationSchema","Field","pattern","title","StyledList","StyledUl","ContactList","map","id","onClick","deleteContact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}